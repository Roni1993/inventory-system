scalar DateTime

type Query {
    delivery(id: ID!): Delivery
    deliveries(page: PageInput): DeliveryCollection!
    deliveriesPlannedTomorrow(page: PageInput): DeliveryCollection!
    deliveredBetween(from: DateTime!, to: DateTime!, page: PageInput): DeliveryCollection!
}

input Sort {
    direction: Direction
    property: DeliveryProperties
}

enum DeliveryProperties {
    deliveryId
    status
    category
    plannedDeliveryDate
    actualDeliveryDate
}

enum Direction { ASC, DESC }

# Tests
# TODO: build repository tests
# TODO: build graphql tests


input PageInput {
    page: Int,
    size: Int,
    sort: [Sort]
}

type DeliveryCollection  {
    content: [Delivery]
    size: Int
    totalElements: Int
    totalPages: Int
}

type Delivery {
    id: ID!
    status: DeliveryStatus!
    category: DeliveryCategory!
    plannedDeliveryDate: DateTime!
    actualDeliveryDate: DateTime
    items: [Item]
}

type Item {
    name: String!
    quantity: Int!
}

enum DeliveryCategory {
    TRUCK,
    PARCEL,
}

enum DeliveryStatus {
    PLANNED,
    IN_PROGRESS,
    DELIVERED,
    UNKNOWN
}

